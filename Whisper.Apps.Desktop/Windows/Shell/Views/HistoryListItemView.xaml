<reactiveUi:ReactiveUserControl x:TypeArguments="viewModels:HistoryListItemViewModel"
                                x:Class="Whisper.Apps.Desktop.Views.HistoryListItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:reactiveUi="http://reactiveui.net"
             xmlns:viewModels="clr-namespace:Whisper.Apps.Desktop.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="800">

    <UserControl.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Background" Value="{DynamicResource BackgroundMidColour}" />
            <Setter Property="Foreground" Value="{DynamicResource ForegroundMidColour}" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="frame" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="frame" Property="Background" Value="{DynamicResource BackgroundShallowColour}" />
                                <Setter Property="Foreground" Value="{DynamicResource ForegroundMidColour}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="frame" Property="Background" Value="{DynamicResource BackgroundDeepColour}" />
                                <Setter Property="Foreground" Value="{DynamicResource ForegroundShallowColour}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
                    <Setter Property="FontSize" Value="10" />
                </Style>
            </Style.Resources>
        </Style>
    </UserControl.Resources>

    <Button x:Name="CopyToClipboardButton" Margin="2">
        <Grid>
            <StackPanel HorizontalAlignment="Left" Margin="5,3">
                <TextBlock x:Name="ContentRegion" Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}" FontSize="12" FontFamily="Calibri" />
                <TextBlock x:Name="ContentTitle"  Foreground="{DynamicResource HighlightMidColour}" FontSize="10" FontFamily="Calibri" />
            </StackPanel>
            <Border Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" HorizontalAlignment="Right" Margin="5">
                <Viewbox Margin="2" Height="20" Width="20">
                    <TextBlock x:Name="IconRegion" Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}" FontFamily="Segoe MDL2 Assets" />
                </Viewbox>
            </Border>
        </Grid>
    </Button>

</reactiveUi:ReactiveUserControl>
