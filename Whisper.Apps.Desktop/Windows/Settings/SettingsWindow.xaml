<controls:LustdWindowEnhanced x:Class="Whisper.Apps.Desktop.Windows.Settings.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:assets="clr-namespace:Whisper.Apps.Desktop.Assets"
        xmlns:reactiveUi="http://reactiveui.net"
        xmlns:viewModels="clr-namespace:Whisper.Apps.Desktop.Windows.Settings.ViewModels"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:controls="clr-namespace:Lustd.Controls;assembly=Lustd"
        mc:Ignorable="d" MinHeight="320" MinWidth="640"
        Title="Settings" Height="450" Width="800">

    <controls:LustdWindowEnhanced.TitleContent>
        <assets:WindowTitle Content="{Binding ElementName=RootWindow, Path=Title}" />
    </controls:LustdWindowEnhanced.TitleContent>

    <Grid x:Name="RootWindow">

        <Grid.Resources>

            <Style x:Key="ContextHostFrameBorderStyle" TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="{DynamicResource BackgroundMidColour}"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="BorderThickness" Value="0,0,2,0"/>
            </Style>

            <Style x:Key="ContextHostListBoxStyle" TargetType="{x:Type ListBox}">

                <Style.Resources>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Foreground" Value="{DynamicResource ForegroundMidColour}"/>
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="0,0,0,0"/>
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" Value="#4C4C4C"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{DynamicResource ForegroundShallowColour}"/>
                                            <Setter Property="Background" Value="{DynamicResource BackgroundMidColour}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{DynamicResource ForegroundShallowColour}"/>
                                            <Setter Property="Background" Value="{DynamicResource BackgroundMidColour}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0.8"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <DataTemplate  DataType="{x:Type viewModels:SettingsPageViewModelBase}">

                        <DataTemplate.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Path=Foreground}" />
                                <Setter Property="Margin" Value="10,8" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataTemplate.Resources>

                        <StackPanel x:Name="templateRoot" Orientation="Horizontal" ToolTip="{Binding Description}">
                            <TextBlock Text="{Binding Name}" />
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Description}" Value="{x:Null}">
                                <Setter TargetName="templateRoot" Property="ToolTip" Value="{x:Null}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Description}" Value="{x:Static system:String.Empty}">
                                <Setter TargetName="templateRoot" Property="ToolTip" Value="{x:Null}" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>

                </Style.Resources>

                <Setter Property="Foreground" Value="{DynamicResource ForegroundMidColour}"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <Border x:Name="ListFrame" SnapsToDevicePixels="True">
                                <ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="ListFrame" Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="180" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" Style="{StaticResource ContextHostFrameBorderStyle}">
                <ListBox x:Name="ContentSelector" Style="{StaticResource ContextHostListBoxStyle}" ItemsSource="{Binding Pages, Mode=OneWay}" SelectedItem="{Binding CurrentPage, Mode=TwoWay}" />
            </Border>

            <Border Grid.Column="1" Margin="10">
                <reactiveUi:ViewModelViewHost x:Name="ContentHost" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" ViewModel="{Binding CurrentPage, Mode=OneWay}" />
            </Border>
        </Grid>

        <StackPanel Grid.Row="1" Margin="5" Orientation="Horizontal" HorizontalAlignment="Right">

            <StackPanel.Resources>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="MinWidth" Value="100" />
                </Style>
            </StackPanel.Resources>

            <Button Content="Apply" Command="{Binding ApplyCommand}" />
            <Button Content="Reset" Command="{Binding ResetCommand}" />

        </StackPanel>

    </Grid>

</controls:LustdWindowEnhanced>
